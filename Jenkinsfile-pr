#!/usr/bin/env groovy

def lib = evaluate readTrusted('./jenkins.groovy')

pipeline {
    agent {
        node {
            label 'strimzi-pr'
        }
    }
    parameters {
        //execute all tests as default for each new Pull request
        string(name: 'JUNIT_TAG', defaultValue: '', description: 'maven parameter for executing specific tests')
    }
    options {
        timeout(time: 7, unit: 'HOURS')
        ansiColor('xterm')
    }
    environment {
        DOCKER_ORG="${DOCKER_ORG:-strimziqe}"
        DOCKER_REGISTRY="${DOCKER_REGISTRY:-docker.io}"
        DOCKER_TAG="${TAG:-latest}"
        MVN_ARGS="-DskipTests"

        ARTIFACTS_DIR = 'systemtest/target/logs'

        JOB_NAME_SUB = "${String.format("%.15s", JOB_NAME).toLowerCase()}"
    }
    stages {
        stage('Clean WS') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout Strimzi') {
            steps {
                checkout scm
            }
        }
        stage('Start Openshift') {
            steps {
                timeout(time: 10, unit: 'MINUTES') {
                    script {
                        lib.setupEnvironment()
                    }
                }
            }
        }
        stage('Build images') {
            steps {
                script {
                    lib.buildStrimzi()
                }
            }
        }
//        stage('push docker images') {
//            steps {
//                sh 'oc login -u test -p test --server localhost:8443 --insecure-skip-tls-verify'
//                sh 'oc new-project enmasseci'
//                sh '$DOCKER login -u unused -p `oc whoami -t` $DOCKER_REGISTRY'
//                sh 'make docker_push'
//            }
//        }
        stage('Execute system tests') {
            steps {
                script {
                    lib.runSystemTests()
                }
            }
        }
    }
    post {
        always {
            postAction(env.ARTIFACTS_DIR)
            sendMail("jstejska@redhat.com")
        }
        failure {
            echo "Build failed"
        }
    }
}
